{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\pro\\\\proyecto-final-reactjs-francobalbis\\\\proyecto-final\\\\src\\\\store\\\\cart-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext({\n  products: [],\n  addProduct: () => {},\n  removeProduct: () => {},\n  clear: () => {},\n  isInCart: () => {},\n  getCartQuantity: () => {},\n  getTotalPrice: () => {}\n});\nexport const CartContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [productList, setProductList] = useState([]);\n\n  const addProduct = product => {\n    const repeatedItemIndex = productList.findIndex(item => item.id === product.id);\n\n    if (repeatedItemIndex !== -1) {\n      setProductList(productList.map(p => p.id === product.id ? { ...p,\n        quantity: p.quantity + product.quantity\n      } : p));\n    } else {\n      setProductList([product, ...productList]);\n    }\n  };\n\n  const removeProduct = id => {\n    const indexToRemove = productList.findIndex(item => item.id === id);\n\n    if (productList[indexToRemove].quantity === 1) {\n      setProductList(productList.filter(i => i.id !== id));\n    } else {\n      setProductList(productList.map(p => p.id === id ? { ...p,\n        quantity: p.quantity - 1\n      } : p));\n    }\n  };\n\n  const clear = () => {\n    setProductList([]);\n  };\n\n  const isInCart = id => {\n    return productList.map(p => p.id).indexOf(id) !== -1;\n  };\n\n  const getCartQuantity = () => {\n    return productList.reduce((total, value) => {\n      return total + value.quantity;\n    }, 0);\n  };\n\n  const getTotalPrice = () => {\n    return productList.reduce((total, value) => {\n      return total + value.price * value.quantity;\n    }, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      products: productList,\n      addProduct,\n      removeProduct,\n      clear,\n      isInCart,\n      getCartQuantity,\n      getTotalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"J2RYfP5Tb+sRKsQ7fA4tQxZxJ/s=\");\n\n_c = CartContextProvider;\nexport default CartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/Users/franc/Desktop/pro/proyecto-final-reactjs-francobalbis/proyecto-final/src/store/cart-context.js"],"names":["createContext","useState","CartContext","products","addProduct","removeProduct","clear","isInCart","getCartQuantity","getTotalPrice","CartContextProvider","children","productList","setProductList","product","repeatedItemIndex","findIndex","item","id","map","p","quantity","indexToRemove","filter","i","indexOf","reduce","total","value","price"],"mappings":"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","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst CartContext = createContext({\r\n    products: [],\r\n    addProduct: () => {},\r\n    removeProduct: () => {},\r\n    clear: () => {},\r\n    isInCart: () => {},\r\n    getCartQuantity: () => {},\r\n    getTotalPrice: () => {}\r\n});\r\n\r\nexport const CartContextProvider = ({ children }) => {\r\n    const [productList, setProductList] = useState([]);\r\n\r\n    const addProduct = (product) => {\r\n        const repeatedItemIndex = productList.findIndex(item => item.id === product.id)\r\n        if (repeatedItemIndex !== -1) {\r\n            setProductList(productList.map(p => p.id === product.id ? {...p, quantity: p.quantity + product.quantity} : p));\r\n        } else {\r\n            setProductList([product, ...productList]);\r\n        }\r\n    }\r\n\r\n    const removeProduct = (id) => {\r\n        const indexToRemove = productList.findIndex(item => item.id === id);\r\n        if (productList[indexToRemove].quantity === 1) {\r\n            setProductList(productList.filter(i => i.id !== id))\r\n        } else {\r\n            setProductList(productList.map(p => p.id === id ? {...p, quantity: p.quantity - 1} : p));\r\n        }\r\n    }\r\n\r\n    const clear = () => {\r\n        setProductList([]);\r\n    }\r\n\r\n    const isInCart = (id) => {\r\n        return productList.map(p => p.id).indexOf(id) !== -1;\r\n    }\r\n\r\n    const getCartQuantity = () => {\r\n        return productList.reduce((total, value) => {\r\n            return total + value.quantity\r\n        }, 0)\r\n    }\r\n\r\n    const getTotalPrice = () => {\r\n        return productList.reduce((total, value) => {\r\n            return total + value.price*value.quantity\r\n        }, 0)\r\n    }\r\n  \r\n    return (\r\n        <CartContext.Provider value={{\r\n            products: productList,\r\n            addProduct,\r\n            removeProduct,\r\n            clear,\r\n            isInCart,\r\n            getCartQuantity,\r\n            getTotalPrice\r\n        }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartContext;"]},"metadata":{},"sourceType":"module"}